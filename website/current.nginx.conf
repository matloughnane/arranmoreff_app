server {
    listen 80;
    server_name    arranmorefastferry.com www.arranmorefastferry.com;
    return         301 https://$server_name$request_uri;
}

server {
    listen 443 ssl;

    ssl_certificate         /etc/letsencrypt/live/arranmorefastferry.com/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/arranmorefastferry.com/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/arranmorefastferry.com/fullchain.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;

    root /var/www/arranmorefastferry.com/public_html;
    index index.html index.htm index.php;

    # Make site accessible from http://localhost/
    server_name arranmorefastferry.com www.arranmorefastferry.com;

    # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
    # Generate with:
    #   openssl dhparam -out /etc/nginx/dhparam.pem 2048
    # ssl_dhparam /etc/nginx/dhparam.pem;

    # What Mozilla calls "Intermediate configuration"
    # Copied from https://mozilla.github.io/server-side-tls/ssl-config-generator/
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:ECDHE-RSA-DES-CBC3-SHA:ECDHE-ECDSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
    ssl_prefer_server_ciphers on;

    # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
    add_header Strict-Transport-Security max-age=15768000;

    # OCSP Stapling
    # fetch OCSP records from URL in ssl_certificate and cache them
    ssl_stapling on;
    ssl_stapling_verify on;

    # If you want to specify a DNS resolver for stapling, you can uncomment the below
    # line. If you leave it commented, nginx will use your system resolver, which will probably
    # work just fine!
    # resolver <IP DNS resolver>;

    gzip on;
    gzip_disable "msie6";

    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript image/png image/tiff image/x-icon image/svg+xml;

    location ~*  \.(jpg|jpeg|png|gif|ico|css|js|svg|pdf)$ {
        expires 30d;
    }

    # PAGES
    location /about {
            try_files $uri.html $uri/ =404;
    }
    location /timetables {
            try_files $uri.html $uri/ =404;
    }
    location /tickets {
            try_files $uri.html $uri/ =404;
    }
    location /contact {
            try_files $uri.html $uri/ =404;
    }
    location /competition {
            try_files $uri.html $uri/ =404;
    }
    location /tickets/tickets_booked {
            try_files $uri.html $uri/ =404;
    }

    # REDUNDANCY
    location /book-tickets {
            return 301 https://arranmorefastferry.com;
    }
    location /about_us {
            return 301 https://arranmorefastferry.com;
    }
    location /terms-conditions {
            return 301 https://arranmorefastferry.com;
    }
    location /ferryinfo.html {
            return 301 https://arranmorefastferry.com;
    }
    location /pictures.html {
            return 301 https://arranmorefastferry.com;
    }
    location /site/themes/realt-na-maidne/ {
            return 301 https://arranmorefastferry.com;
    }
    # ERRORS
    error_page 404      /404.html;
    location = /404.html {
            root /var/www/arranmorefastferry.com/public_html;
            internal;
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/www;
    }

}